{"version":3,"sources":["components/Card/Card.js","components/CardList/CardList.js","components/SearchBox/SearchBox.js","components/Scroll/Scroll.js","constants.js","droids.js","helpers.js","containers/App/App.js","actions.js","serviceWorker.js","reducers.js","index.js"],"names":["Card","id","name","height","mass","homeworld","className","alt","src","CardList","droids","map","droid","SearchBox","onSearchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","children","CHANGE_SEARCH_FIELD","REQUEST_DROIDS_PENDING","REQUEST_DROIDS_SUCCESS","REQUEST_DROIDS_FAILED","swapiLocal","names","planets","newDroid","getName","getHeight","getMass","getHomeworld","Math","floor","random","addingIndexKey","i","length","App","this","onRequestDroids","searchField","isPending","filteredDroids","filter","toLowerCase","includes","Component","connect","state","searchDroids","requestDroids","error","dispatch","event","text","target","value","payload","d","randomNumber","y","push","fetch","then","response","json","data","people","substring","j","catch","Boolean","window","location","hostname","match","initialStateSearch","initialStateDroids","rootReducers","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.c4abde02.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ id, name, height, mass, homeworld }) => {\n\treturn (\n\t\t<div className='bg-yellow dib br3 pa3 ma2 grow ba b--gold bw2 shadow-5 tc'>\n\t\t\t<img alt='droidImage' src={`https://robohash.org/${id}?size=200x200&&`} />\n\t\t\t<div>\n\t\t\t\t<p className='f3 b white ba b--black bg-black br4'>{name}</p>\n\t\t\t\t<div className='ba bw1 br2 b--black bg-gold pa3'>\n\t\t\t\t\t<span className='b'>{'Height: '}</span>\n\t\t\t\t\t<span>{height}</span>\n\t\t\t\t\t<p></p>\n\t\t\t\t\t{/*<p className='b'>{`Height: ${height}`}</p>*/}\n\t\t\t\t\t<span className='b'>{'Mass: '}</span>\n\t\t\t\t\t<span>{mass}</span>\n\t\t\t\t\t<p></p>\n\t\t\t\t\t{/*<p className='b'>{`Mass: ${mass}`}</p>*/}\n\t\t\t\t\t<span className='b'>{'Homeworld: '}</span>\n\t\t\t\t\t<span>{homeworld}</span>\n\t\t\t\t\t{/*<p className='b'>{`Homeworld: ${homeworld}`}</p>*/}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Card;\n","import React from 'react';\nimport Card from '../Card/Card';\n\nconst CardList = ({ droids }) => {\n\treturn (\n\t\t<div>\n\t\t\t{\n\t\t\t\tdroids.map(droid => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\tkey={droid.id}\n\t\t\t\t\t\t\tid={droid.id}\n\t\t\t\t\t\t\tname={droid.name}\n\t\t\t\t\t\t\theight={droid.height}\n\t\t\t\t\t\t\tmass={droid.mass}\n\t\t\t\t\t\t\thomeworld={droid.homeworld} \n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t}\n\t\t</div>\n\t);\n}\n\nexport default CardList;\n","import React from 'react';\n\nconst SearchBox = ({ onSearchChange }) => {\n\treturn (\n\t\t<div className='pa2'>\n\t\t\t<input\n\t\t\t\tclassName='pa3 ba bw2 b--gold bg-yellow'\n\t\t\t\ttype='search' \n\t\t\t\tplaceholder='search droids'\n\t\t\t\tonChange={onSearchChange}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default SearchBox;\n","import React from 'react';\n\nconst Scroll = (props) => {\n\treturn (\n\t\t<div className='pa2' style={{ overflowY: 'scroll', border: '2px solid black', height: '500px' }}>\n\t\t\t{props.children}\n\t\t</div>\n\t);\n}\n\nexport default Scroll;\n","\nexport const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\nexport const REQUEST_DROIDS_PENDING = 'REQUEST_DROIDS_PENDING';\nexport const REQUEST_DROIDS_SUCCESS = 'REQUEST_DROIDS_SUCCESS';\nexport const REQUEST_DROIDS_FAILED = 'REQUEST_DROIDS_FAILED';\n","\n// the only 5 droids in swapi\nexport const swapiLocal = [\n\t{\n\t\tid: 1,\n\t\tname: 'C-3PO',\n\t\theight: '167',\n\t\tmass: '75',\n\t\thomeworld: 'Tatooine',\n\t},\n\t{\n\t\tid: 2,\n\t\tname: 'R2-D2',\n\t\theight: '96',\n\t\tmass: '32',\n\t\thomeworld: 'Naboo',\n\t},\n\t{\n\t\tid: 3,\n\t\tname: 'R5-D4',\n\t\theight: '97',\n\t\tmass: '32',\n\t\thomeworld: 'Tatooine',\n\t},\n\t{\n\t\tid: 4,\n\t\tname: 'IG-88',\n\t\theight: '200',\n\t\tmass: '140',\n\t\thomeworld: 'unknown',\n\t},\n\t{\n\t\tid: 5,\n\t\tname: 'BB8',\n\t\theight: 'unknown',\n\t\tmass: 'unknown',\n\t\thomeworld: 'unknown',\n\t},\n];\n\n// 28 droid names\nexport const names = [\n\t'L3-37',\n\t'K-2SO',\n\t'Mouse',\n\t'GNK',\n\t'BB-9E',\n\t'Imperial Probe',\n\t'Pit',\n\t'2-1B',\n\t'TT-8L/Y7',\n\t'R4-P17',\n\t'WA-7',\n\t'Interrogation',\n\t'EV-9D9',\n\t'8D8',\n\t'4-LOM',\n\t'3B6-RA-7',\n\t'Droideka',\n\t'GH-7',\n\t'Battle',\n\t'Azi-3',\n\t'Buzz',\n\t'U-3PO',\n\t'CZ-3',\n\t'FX-7',\n\t'Torture',\n\t'Ooba',\n\t'GA-97',\n\t'Chopper',\n];\n\n// 31 planets\nexport const planets = [\n\t'Mustafar',\n\t'Geonosis',\n\t'Polis Massa',\n\t'Wobani',\n\t'Eadu',\n\t'Mygeeto',\n\t'Hosnian Prime',\n\t'Hoth',\n\t'D’Qar',\n\t'Jakku',\n\t'Cato Neimoidia',\n\t'Dagobah',\n\t'Felucia',\n\t'Utapau',\n\t'Kamino',\n\t'Jedha',\n\t'Crait',\n\t'Lah’mu',\n\t'Alderaan',\n\t'Takodana',\n\t'Yavin 4',\n\t'Scarif',\n\t'Cantonica',\n\t'Kashyyyk',\n\t'Tatooine',\n\t'Bespin',\n\t'Ahch-To',\n\t'Coruscant',\n\t'Naboo',\n\t'Endor',\n\t'unknown',\n];\n","import { names, planets } from './droids';\n\nexport const newDroid = () => {\n\tconst droid = {};\n\n\tdroid.name = getName();\n\tdroid.height = getHeight();\n\tdroid.mass = getMass();\n\tdroid.homeworld = getHomeworld();\n\n\treturn droid;\n}\n\nconst getName = () => {\n\treturn names[Math.floor(Math.random() * 28)];\n }\n\nconst getHeight = () => {\n\treturn Math.floor(Math.random() * (200 - 50 + 1) +50);\n}\n\nconst getMass = () => {\n\treturn Math.floor(Math.random() * (150 - 25 + 1) + 25);\n}\n\nconst getHomeworld = () => {\n\treturn planets[Math.floor(Math.random() * 31)];\n}\n\nexport const addingIndexKey = (droids) => {\n  for (let i = 0; i < droids.length; i++) {\n    droids[i].id = i + 1;\n  }\n\n  return droids;\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './App.css';\nimport 'tachyons';\nimport CardList from '../../components/CardList/CardList';\nimport SearchBox from '../../components/SearchBox/SearchBox';\nimport Scroll from '../../components/Scroll/Scroll';\n\nimport { setSearchField, requestDroids } from '../../actions';\n \nconst mapStateToProps = (state) => {\n  return {\n    searchField: state.searchDroids.searchField,\n    droids: state.requestDroids.droids,\n    isPending: state.requestDroids.isPending,\n    error: state.requestDroids.error\n  };\n};\n\nconst mapDispachToProps = (dispatch) => {\n  return {\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n    onRequestDroids: () => dispatch(requestDroids())\n  };\n};\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.onRequestDroids();\n  }\n\n  render() {\n    const { searchField, onSearchChange, droids, isPending } = this.props;\n\n    const filteredDroids = droids.filter(droid => {\n      return droid.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n\n    return (\n      isPending === true\n      ? <h1 className='ma3 yellow'>LOADING . . .</h1>\n      : <div className='tc'>\n          <h1 className='yellow f-subheadline'>DROID GALAXY</h1>\n          <SearchBox onSearchChange={onSearchChange} />\n          <Scroll>\n            <CardList droids={filteredDroids} />\n          </Scroll>\n        </div>\n    );\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispachToProps)(App);\n","import {\n\tCHANGE_SEARCH_FIELD,\n\tREQUEST_DROIDS_PENDING,\n\tREQUEST_DROIDS_SUCCESS,\n\tREQUEST_DROIDS_FAILED\n} from './constants';\nimport { swapiLocal } from './droids';\nimport { newDroid, addingIndexKey } from './helpers';\n\nexport const setSearchField = (text) => {\n\treturn {\n\t\ttype: CHANGE_SEARCH_FIELD,\n\t\tpayload: text\n\t}\n}\n\nexport const requestDroids = () => (dispatch) => {\n\tdispatch({ type: REQUEST_DROIDS_PENDING })\n\n\tlet d = [];\n    const randomNumber = Math.floor(Math.random() * (15 - 5 + 1) + 5);\n    for (let y = 0; y < randomNumber; y++) {\n      d.push(newDroid());\n    }\n\n\tfetch(`https://swapi.dev/api/species/2/`)\n\t.then(response => response.json())\n\t.then(data => {\n\t\tfor (let i = 0; i < data.people.length; i++) {\n\t\t\tfetch(`https://${data.people[i].substring(7)}`)\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n\n\t\t\t\t// changing the homeworld url to a real name\n\t\t\t\tfor (let j = 0; j < swapiLocal.length ; j++) {\n\t\t\t\t\tif (data.name === swapiLocal[j].name) {\n\t\t\t\t\t\tdata.homeworld = swapiLocal[j].homeworld;\n\t\t\t\t\t} \n\t\t\t\t}\n\n\t\t\t\td.push(data);\n\t\t\t\tdispatch({ type: REQUEST_DROIDS_SUCCESS, payload: addingIndexKey(d) })\n\t\t\t});\n\t\t}\n\t})\n\t.catch(error => dispatch({ type: REQUEST_DROIDS_FAILED, payload: error }));\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n\tCHANGE_SEARCH_FIELD,\n\tREQUEST_DROIDS_PENDING,\n\tREQUEST_DROIDS_SUCCESS,\n\tREQUEST_DROIDS_FAILED\n} from './constants';\n\nconst initialStateSearch = {\n\tsearchField: ''\n};\n\nexport const searchDroids = (state=initialStateSearch, action={}) => {\n\tswitch(action.type) {\n\t\tcase CHANGE_SEARCH_FIELD:\n\t\t\treturn Object.assign({}, state, { searchField: action.payload });\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nconst initialStateDroids = {\n\tisPending: false,\n\tdroids: [],\n\terror: ''\n};\n\nexport const requestDroids = (state=initialStateDroids, action={}) => {\n\tswitch(action.type) {\n\t\tcase REQUEST_DROIDS_PENDING:\n\t\t\treturn Object.assign({}, state, { isPending: true });\n\t\tcase REQUEST_DROIDS_SUCCESS:\n\t\t\treturn Object.assign({}, state, { isPending: false, droids: action.payload });\n\t\tcase REQUEST_DROIDS_FAILED:\n\t\t\treturn Object.assign({}, state, { isPending: false, error: action.payload });\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\n// import { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport './index.css';\nimport App from './containers/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { searchDroids, requestDroids } from './reducers';\n\n// const logger = createLogger();\nconst rootReducers = combineReducers({ searchDroids, requestDroids });\nconst store = createStore(rootReducers, applyMiddleware(thunkMiddleware));\n\nReactDOM.render(\n\t\t\t\t<Provider store={store}>\n\t\t\t\t\t<App />\n\t\t\t\t</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}